{"version":3,"sources":["components/Navbar/Options.js","assets/images/svg/gallium-logo.svg","components/Navbar/index.js","components/Breadcrumbs/index.js","components/Progress/index.js","components/Input/index.js","components/Uploader/index.js","assets/images/img/csv_file_example.png","forecasting/DataGuidance.js","components/Button/index.js","forecasting/middleware.js","components/Dropdown/index.js","forecasting/Upload.js","forecasting/SampleData.js","components/Links/index.js","forecasting/Documentation.js","forecasting/AnalysisGuidance.js","components/Table/index.js","forecasting/Analysis.js","forecasting/ResultGuidance.js","components/Chart/index.js","forecasting/Result.js","forecasting/index.js","GptjChatbot/ReadMore.js","GptjChatbot/middleware.js","GptjChatbot/ChatLaunch.js","GptjChatbot/Chat.js","GptjChatbot/index.js","assets/images/svg/openai.svg","assets/images/svg/ludwig.svg","assets/images/svg/prophet.svg","assets/images/svg/screen-image.svg","assets/images/svg/eleutherai.svg","pages/Landing/index.js","assets/images/svg/forecasting.svg","assets/images/svg/nlp.svg","assets/images/svg/summarize.svg","pages/Nav/index.js","App.js","reportWebVitals.js","index.js"],"names":["Options","data","to","link","style","textDecoration","motion","div","className","whileHover","borderBottom","transition","ease","duration","name","Navbar","isNavOpen","setIsNavOpen","handleClick","width","display","justifyContent","alignItems","src","galliumlogo","marginRight","color","onClick","AnimatePresence","initial","height","animate","speed","exit","x","fill","Breadcrumbs","map","item","index","href","length","title","Progress","state","placeholder","value","onChange","error","type","Uploader","file","fileName","setFile","setFileName","for","class","role","tabindex","textAlign","lineHeight","marginTop","marginBottom","id","e","target","files","accept","DataGuidance","slider","handleSideNav","sample_img","Button","button_title","button_link","icon","axios","Axios","create","baseURL","Upload","useState","setSlider","setLoading","project_name","project_description","email","forecast_metric","series_metric","skip_nrows","first_row_headers","setData","setError","history","useRouteMatch","path","useHistory","formData","FormData","handleData","event","console","log","DATA_UPLOAD","a","post","headers","res","push","pathname","response","Input","Dropdown","gap","cursor","preventDefault","append","SampleData","Links","link_text","link_to","Documentation","AnalysisGuidance","Table","Analysis","ResultGuidance","Chart","group","date","options","axes","bottom","mapsTo","scaleType","left","curve","Result","Forecasting","exact","ReadMore","ChatLaunch","props","setName","loading","setToken","CREATE_SESSION","token","Object","keys","onSubmit","InlineLoading","Chat","human","setHuman","bot","setBot","location","useLocation","CHAT","socket","WebSocket","addEventListener","concat","send","HANDLE_REFRESH","maxWidth","GptjChatbot","Landing","openai","ludwig","prophet","fontFamily","fontSize","screen_image","Nav","forecasting","alt","nlp","summarize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9658962c.chunk.js","sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst Options = ({ data }) => {\n  return (\n    <Link to={data.link} style={{ textDecoration: \"none\" }}>\n      <motion.div\n        className=\"options-container\"\n        whileHover={{ borderBottom: \"2px solid #039874\" }}\n        transition={{ ease: \"easeIn\", duration: 0.05 }}\n      >\n        <div className=\"options-text\">\n          <a>{data.name}</a>\n        </div>\n      </motion.div>\n    </Link>\n  );\n};\n\nexport default Options;\n","export default __webpack_public_path__ + \"static/media/gallium-logo.3967fe37.svg\";","import {\n  Close24,\n  Menu24,\n  ArrowRight24,\n  ArrowRight16,\n} from \"@carbon/icons-react\";\nimport React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Options from \"./Options\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport \"./style.scss\";\nimport galliumlogo from \"../../assets/images/svg/gallium-logo.svg\";\n\nconst Navbar = ({ isNavOpen, setIsNavOpen }) => {\n  const handleClick = () => {\n    if (isNavOpen === \"open\") {\n      setIsNavOpen(\"closed\");\n    } else {\n      setIsNavOpen(\"open\");\n    }\n  };\n  return (\n    <Fragment>\n      <div className=\"app-nav\">\n        <div className=\"app-nav-container\">\n          <div className=\"nav-tabs\">\n            <Link\n              to={\"/\"}\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"left\",\n                alignItems: \"center\",\n              }}\n            >\n              <img\n                src={galliumlogo}\n                width=\"32px\"\n                style={{ marginRight: \"1rem\" }}\n              />\n              <a style={{ color: \"#039874\" }}>Gallium</a>\n            </Link>\n          </div>\n\n          <div className=\"nav-actions\">\n            <div className=\"nav-action-1\">\n              <Options data={{ name: \"Tools\", link: \"/navigation\" }} />\n            </div>\n            <div className=\"nav-action-2\">\n              <Options data={{ name: \"Github\", link: \"/\" }} />\n            </div>\n            <div className=\"nav-action-3\">\n              <Options data={{ name: \"Developer\", link: \"/\" }} />\n            </div>\n          </div>\n          <div className=\"nav-switcher\">\n            <motion.div onClick={handleClick}>\n              {isNavOpen === \"open\" ? (\n                <Close24 style={{ color: \"#039874\" }} />\n              ) : isNavOpen === \"closed\" ? (\n                <Menu24 style={{ color: \"#039874\" }} />\n              ) : (\n                <Menu24 style={{ color: \"#039874\" }} />\n              )}\n            </motion.div>\n          </div>\n        </div>\n      </div>\n      <AnimatePresence>\n        {isNavOpen === \"open\" && (\n          <motion.div\n            initial={{ height: \"0%\" }}\n            animate={{ height: \"100%\", speed: \"100ms\" }}\n            transition={{ ease: \"easeInOut\", duration: 0.3 }}\n            exit={{ height: \"0%\", speed: \"100ms\" }}\n            className=\"slider-menu\"\n          >\n            <div className=\"slider-menu-container\">\n              <motion.div\n                initial={{ x: \"-100px\" }}\n                animate={{ x: \"0\", speed: \"100ms\" }}\n                transition={{ ease: \"easeInOut\", duration: 0.5 }}\n                exit={{ display: \"none\", speed: \"1000ms\" }}\n                className=\"slider-item\"\n              >\n                <div\n                  style={{ display: \"flex\", alignItems: \"center\" }}\n                  onClick={handleClick}\n                >\n                  <Link to=\"/navigation\">Tools</Link>\n                </div>\n\n                <div className=\"see-all-container\">\n                  <ArrowRight16 fill=\"#039874\" />\n                </div>\n              </motion.div>\n              <motion.div\n                initial={{ x: \"-100px\" }}\n                animate={{ x: \"0\", speed: \"100ms\" }}\n                transition={{ ease: \"easeInOut\", duration: 0.6 }}\n                exit={{ display: \"none\", speed: \"10000ms\" }}\n                className=\"slider-item\"\n              >\n                <div\n                  style={{ display: \"flex\", alignItems: \"center\" }}\n                  onClick={handleClick}\n                >\n                  <a>Github</a>\n                </div>\n                <div className=\"see-all-container\">\n                  <ArrowRight16 fill=\"#039874\" />\n                </div>\n              </motion.div>\n              <motion.div\n                initial={{ x: \"-100px\" }}\n                animate={{ x: \"0\", speed: \"100ms\" }}\n                transition={{ ease: \"easeInOut\", duration: 0.7 }}\n                exit={{ display: \"none\", speed: \"10000ms\" }}\n                className=\"slider-item\"\n              >\n                <div\n                  style={{ display: \"flex\", alignItems: \"center\" }}\n                  onClick={handleClick}\n                >\n                  <a>Developer</a>\n                </div>\n\n                <div className=\"see-all-container\">\n                  <ArrowRight16 fill=\"#039874\" />\n                </div>\n              </motion.div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </Fragment>\n  );\n};\n\nexport default Navbar;\n","import { ChevronRight16 } from \"@carbon/icons-react\";\nimport React, { Fragment } from \"react\";\nimport \"./style.scss\";\n\nconst Breadcrumbs = ({ data }) => {\n  return (\n    <div className=\"breadcrumbs-container\">\n      {data.map((item, index) => (\n        <Fragment key={index}>\n          <a\n            href={item.link}\n            style={\n              index < data.length - 1 ? { color: \"\" } : { color: \"#039874\" }\n            }\n          >\n            {item.title}\n          </a>\n          {index < data.length - 1 ? <ChevronRight16 /> : <Fragment />}\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default Breadcrumbs;\n","import React from \"react\";\nimport \"./style.scss\";\nimport {\n  CheckmarkOutline16,\n  CircleFilled16,\n  RadioButton16,\n} from \"@carbon/icons-react\";\n\nconst Progress = ({ state }) => {\n  return (\n    <div className=\"progress-container\">\n      <div\n        className={`progress-indicator ${\n          state === \"1\" ? \"active-indicator\" : \"\"\n        }`}\n      >\n        {state === 1 ? (\n          <CircleFilled16 fill=\"#3569f8\" />\n        ) : state > 1 ? (\n          <CheckmarkOutline16 fill=\"#3569f8\" />\n        ) : (\n          <RadioButton16 fill=\"#c6c6c6\" />\n        )}\n        <p>Data Upload</p>\n      </div>\n      <div\n        className={`progress-indicator ${\n          state === 2 ? \"active-indicator\" : \"\"\n        }`}\n      >\n        {state === 2 ? (\n          <CircleFilled16 fill=\"#3569f8\" />\n        ) : state > 2 ? (\n          <CheckmarkOutline16 fill=\"#3569f8\" />\n        ) : (\n          <RadioButton16 fill=\"#c6c6c6\" />\n        )}\n        <p>Run Model</p>\n      </div>\n      <div\n        className={`progress-indicator ${\n          state === 3 ? \"active-indicator\" : \"\"\n        }`}\n      >\n        {state === 3 ? (\n          <CircleFilled16 fill=\"#3569f8\" />\n        ) : state > 3 ? (\n          <CheckmarkOutline16 fill=\"#3569f8\" />\n        ) : (\n          <RadioButton16 fill=\"#c6c6c6\" />\n        )}\n        <p>View Result</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Progress;\n","import React, { Fragment } from \"react\";\nimport \"./style.scss\";\n\nconst index = ({ name, placeholder, value, onChange, error }) => {\n  return (\n    <div className={error ? \"text-input input-error\" : \"text-input\"}>\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n      />\n      {error ? (\n        <small className=\"error-text\">{error}</small>\n      ) : (\n        <Fragment></Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default index;\n","import React, { Fragment, useState } from \"react\";\nimport { CloudUpload } from \"@carbon/pictograms-react\";\nimport \"./style.scss\";\n\nconst Uploader = ({ file, fileName, setFile, setFileName }) => {\n  const onChange = (e) => {\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  };\n\n  return (\n    <Fragment>\n      <label\n        for=\"file-uploader\"\n        class=\"bx--file-browse-btn\"\n        role=\"button\"\n        tabindex=\"0\"\n      >\n        <div data-file-drop-container class=\"bx--file__drop-container\">\n          <div className=\"upload-button-content\">\n            <h4\n              style={{\n                textAlign: \"center\",\n                color: \"#999999\",\n                lineHeight: 1.2,\n              }}\n            >\n              Click to upload or drag an drop here\n            </h4>\n            <small\n              style={{\n                marginTop: \"0.5rem\",\n                marginBottom: \"2rem\",\n                textAlign: \"center\",\n              }}\n            >\n              * Only .csv and .xlsx files supported\n            </small>\n            <CloudUpload fill=\"#039874\" />\n            <small\n              style={{ marginTop: \"2rem\", color: \"#039874\" }}\n              className=\"bx--file-filename\"\n            >\n              {fileName}\n            </small>\n          </div>\n          <input\n            type=\"file\"\n            class=\"bx--file-input\"\n            id=\"file-uploader\"\n            data-file-uploader\n            data-target={fileName}\n            onChange={onChange}\n            accept={[\".xlsx\", \".csv\"]}\n          />\n        </div>\n      </label>\n    </Fragment>\n  );\n};\n\nexport default Uploader;\n","export default __webpack_public_path__ + \"static/media/csv_file_example.3405b079.png\";","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { CloudDownload16, Close32 } from \"@carbon/icons-react\";\nimport sample_img from \"../assets/images/img/csv_file_example.png\";\n\nconst DataGuidance = ({ slider, handleSideNav }) => {\n  return (\n    <AnimatePresence>\n      {slider === true && (\n        <motion.div\n          initial={{ x: \"500px\" }}\n          animate={{ x: \"0\", speed: \"1000ms\" }}\n          transition={{ ease: \"easeIn\", duration: 0.4 }}\n          exit={{ x: \"500px\", speed: \"1000ms\" }}\n          className={slider === true ? \"slider\" : \"slider-out\"}\n        >\n          <div className=\"slider-close\">\n            <Close32 onClick={handleSideNav} fill=\"#999999\" />\n          </div>\n          <div className=\"slider-content\">\n            <h4 style={{ color: \"#039874\", marginBottom: \"1rem\" }}>\n              Data Guidance\n            </h4>\n            <p>\n              Your file should contain at least 2 columns (the data field and\n              the prediction field) and look something like this (when viewing\n              in excel):\n            </p>\n            <div className=\"slider-datalist\">\n              <img src={sample_img} width=\"300px\" />\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default DataGuidance;\n","import { ArrowLeft32, ArrowRight32 } from \"@carbon/icons-react\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.scss\";\n\nconst Button = ({ button_title, button_link, icon, onClick }) => {\n  return (\n    <Link\n      className={`button ${icon === \"back\" ? \"button-back\" : \"\"}`}\n      to={button_link}\n      onClick={onClick}\n    >\n      <div className=\"button-content\">\n        {icon === \"back\" ? <ArrowLeft32 fill=\"#ffffff\" /> : \"\"}\n        <h4>{button_title}</h4>\n        {icon === \"next\" ? <ArrowRight32 fill=\"#ffffff\" /> : \"\"}\n      </div>\n    </Link>\n  );\n};\n\nexport default Button;\n","import Axios from \"axios\";\n\nexport const axios = Axios.create({\n  baseURL: \"http://192.168.0.149:8558\",\n});\n","import React, { Fragment } from \"react\";\nimport \"./style.scss\";\n\nconst index = ({ name, placeholder, value, onChange, error }) => {\n  return (\n    <div className={error ? \"text-input input-error\" : \"text-input\"}>\n      <select\n        type=\"text\"\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n      />\n      {error ? (\n        <small className=\"error-text\">{error}</small>\n      ) : (\n        <Fragment></Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default index;\n","import React, { useState } from \"react\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport \"./style.scss\";\nimport Breadcrumbs from \"../components/Breadcrumbs\";\nimport Progress from \"../components/Progress\";\nimport Input from \"../components/Input\";\nimport Uploader from \"../components/Uploader\";\nimport { Information16 } from \"@carbon/icons-react\";\nimport DataGuidance from \"./DataGuidance\";\nimport Button from \"../components/Button\";\nimport { axios } from \"./middleware\";\nimport Dropdown from \"../components/Dropdown\";\n\nconst Upload = () => {\n  const [slider, setSlider] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState({\n    project_name: \"\",\n    project_description: \"\",\n    email: \"\",\n    forecast_metric: \"\",\n    series_metric: \"\",\n    skip_nrows: \"\",\n    first_row_headers: \"\",\n  });\n  const [fileName, setFileName] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [error, setError] = useState({});\n  const { path } = useRouteMatch();\n\n  const history = useHistory();\n\n  const formData = new FormData();\n\n  const handleSideNav = () => {\n    if (slider === false) {\n      setSlider(true);\n    } else {\n      setSlider(false);\n    }\n  };\n\n  const handleData = (event) => {\n    setData({ ...data, [event.target.name]: event.target.value });\n  };\n\n  console.log(data);\n\n  const DATA_UPLOAD = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      console.log(res);\n      setLoading(false);\n      setError({});\n      history.push({\n        pathname: `/forecasting/analysis`,\n        state: {},\n      });\n    } catch (error) {\n      setError(error.response);\n      setLoading(false);\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    formData.append(\"project_name\", data.project_name);\n    formData.append(\"project_description\", data.project_description);\n    formData.append(\"email\", data.email);\n    formData.append(\"forecast_metric\", data.forecast_metric);\n    formData.append(\"series_metric\", data.series_metric);\n    formData.append(\"skip_nrows\", data.skip_nrows);\n    formData.append(\"first_row_headers\", data.first_row_headers);\n    formData.append(\"file\", file);\n\n    DATA_UPLOAD();\n  };\n\n  console.log(error);\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <Breadcrumbs\n          data={[\n            { title: \"Home\", link: \"/navigation\" },\n            { title: \"Forecasting\", link: \"/forecasting\" },\n            { title: \"Data Upload\", link: \"/forecasting/upload\" },\n          ]}\n        />\n        <div className=\"header\">\n          <h2>Time Series Forecasting</h2>\n        </div>\n        <div className=\"forecasting-content\">\n          <div className=\"forecasting-description\">\n            <Progress state={1} />\n            <div className=\"data-input\">\n              <small>\n                Note: Due to various data requirements, Gallium forecasting uses\n                temporary data caching, however, your data is not saved.Once you\n                are done with any experiment, you have to download the results,\n                or you will loose your data. Please do not use Gallium for\n                sensitive data.\n              </small>\n              <p\n                style={{\n                  marginTop: \"2rem\",\n                  marginBottom: \"1rem\",\n                  color: \"#039874\",\n                }}\n              >\n                Project Details\n              </p>\n              <Input\n                placeholder={\"Email Address\"}\n                value={data.email}\n                name={\"email\"}\n                onChange={handleData}\n              />\n\n              <Input\n                placeholder={\"Project Name\"}\n                value={data.project_name}\n                name={\"project_name\"}\n                onChange={handleData}\n              />\n              <Input\n                placeholder={\"Project Description\"}\n                value={data.project_description}\n                name={\"project_description\"}\n                onChange={handleData}\n              />\n\n              <Input\n                placeholder={\"Column Name to Forecast\"}\n                value={data.forecast_metric}\n                name={\"forecast_metric\"}\n                onChange={handleData}\n              />\n\n              <Input\n                placeholder={\"Time Series Column Name\"}\n                value={data.series_metric}\n                name={\"series_metric\"}\n                onChange={handleData}\n              />\n\n              <Input\n                placeholder={\"Number of data rows to skip\"}\n                value={data.skip_nrows}\n                name={\"skip_nrows\"}\n                onChange={handleData}\n              />\n\n              <Dropdown />\n\n              <div className=\"data-upload\">\n                <p style={{ color: \"#039874\" }}>Data Upload</p>\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: \"0.4rem\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={handleSideNav}\n                >\n                  <p style={{ color: \"#999999\" }}>Read the data guidiance</p>\n                  <Information16 fill=\"#999999\" />\n                </div>\n              </div>\n              <Uploader\n                file={file}\n                fileName={fileName}\n                setFile={setFile}\n                setFileName={setFileName}\n              />\n            </div>\n            <div\n              style={{\n                marginTop: \"4rem\",\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                button_title=\"Next\"\n                icon=\"next\"\n                button_link=\"\"\n                onClick={onSubmit}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <DataGuidance slider={slider} handleSideNav={handleSideNav} />\n    </div>\n  );\n};\n\nexport default Upload;\n","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { CloudDownload16, Close32 } from \"@carbon/icons-react\";\n\nconst SampleData = ({ slider, handleSideNav }) => {\n  return (\n    <AnimatePresence>\n      {slider === true && (\n        <motion.div\n          initial={{ x: \"500px\" }}\n          animate={{ x: \"0\", speed: \"1000ms\" }}\n          transition={{ ease: \"easeIn\", duration: 0.4 }}\n          exit={{ x: \"500px\", speed: \"1000ms\" }}\n          className={slider === true ? \"slider\" : \"slider-out\"}\n        >\n          <div className=\"slider-close\">\n            <Close32 onClick={handleSideNav} fill=\"#999999\" />\n          </div>\n\n          <div className=\"slider-content\">\n            <h4 style={{ color: \"#039874\", marginBottom: \"1rem\" }}>\n              Sample Data\n            </h4>\n            <p>\n              Leverage Gallium's data library to test Gallium Forecasting. Build\n              your time series forecast now with sample csv files to get\n              started.\n            </p>\n            <div className=\"slider-datalist\">\n              <a href=\"\">\n                <CloudDownload16 />\n                Shampoos Sales Data\n              </a>\n              <a href=\"\">\n                {\" \"}\n                <CloudDownload16 /> Saugeen River Temp\n              </a>\n              <a href=\"\">\n                {\" \"}\n                <CloudDownload16 />\n                Manning Wikipedia Log Scale PVs\n              </a>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default SampleData;\n","import React from \"react\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\nimport { ArrowRight16 } from \"@carbon/icons-react\";\nconst Links = ({ link_text, link_to }) => {\n  return (\n    <Link className=\"links\" to={link_to}>\n      <h4 style={{ color: \"#039874\", marginRight: \"1rem\" }}>{link_text}</h4>\n      <ArrowRight16 fill=\"#039874\" />\n    </Link>\n  );\n};\n\nexport default Links;\n","import React from \"react\";\nimport \"./style.scss\";\n\nimport Breadcrumbs from \"../components/Breadcrumbs\";\nimport { CloudDownload16 } from \"@carbon/icons-react\";\n\nimport SampleData from \"./SampleData\";\nimport Links from \"../components/Links\";\n\nconst Documentation = ({ slider, handleSideNav }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <Breadcrumbs\n          data={[\n            { title: \"Home\", link: \"/navigation\" },\n            { title: \"Forecasting\", link: \"/forecasting\" },\n          ]}\n        />\n        <div className=\"header\">\n          <h2>Time Series Forecasting</h2>\n        </div>\n        <div className=\"forecasting-content\">\n          <div className=\"forecasting-description\">\n            <p>\n              Run forecasts on any data with advanced AI models like Facebook\n              Prophet and Uber's Ludwig. Galluim Provides two (2) models\n            </p>\n\n            <h4>Facebook Prophet</h4>\n            <p>\n              Prophet is a procedure for forecasting time series data based on\n              an additive model where non-linear trends are fit with yearly,\n              weekly, and daily seasonality, plus holiday effects. It works best\n              with time series that have strong seasonal effects and several\n              seasons of historical data. Prophet is robust to missing data and\n              shifts in the trend, and typically handles outliers well. Prophet\n              is open source software released by Facebook’s Core Data Science\n              team.\n            </p>\n\n            <h4>Uber - Orbit</h4>\n            <p>\n              Orbit is a Python package for Bayesian time series forecasting and\n              inference. It provides a familiar and intuitive\n              initialize-fit-predict interface for time series tasks, while\n              utilizing probabilistic programming languages under the hood.\n            </p>\n\n            <div className=\"forecasting-link\" onClick={handleSideNav}>\n              <a style={{ color: \"#039874\" }}>\n                Try out Gallium Forecasting with sample data\n              </a>\n              <CloudDownload16 fill=\"#039874\" />\n            </div>\n            <Links\n              link_text=\"Ready? Create New Project\"\n              link_to=\"/forecasting/upload\"\n            />\n          </div>\n        </div>\n      </div>\n      <SampleData slider={slider} handleSideNav={handleSideNav} />\n    </div>\n  );\n};\n\nexport default Documentation;\n","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { CloudDownload16, Close32 } from \"@carbon/icons-react\";\nimport sample_img from \"../assets/images/img/csv_file_example.png\";\n\nconst AnalysisGuidance = ({ slider, handleSideNav }) => {\n  return (\n    <AnimatePresence>\n      {slider === true && (\n        <motion.div\n          initial={{ x: \"500px\" }}\n          animate={{ x: \"0\", speed: \"1000ms\" }}\n          transition={{ ease: \"easeIn\", duration: 0.4 }}\n          exit={{ x: \"500px\", speed: \"1000ms\" }}\n          className={slider === true ? \"slider\" : \"slider-out\"}\n        >\n          <div className=\"slider-close\">\n            <Close32 onClick={handleSideNav} fill=\"#999999\" />\n          </div>\n          <div className=\"slider-content\">\n            <h4 style={{ color: \"#039874\", marginBottom: \"1rem\" }}>\n              Analysis Guidance\n            </h4>\n            <p>\n              Your file should contain at least 2 columns (the data field and\n              the prediction field) and look something like this (when viewing\n              in excel):\n            </p>\n            <div className=\"slider-datalist\"></div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default AnalysisGuidance;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst Table = () => {\n  return (\n    <table class=\"bx--data-table bx--data-table--short\">\n      <thead>\n        <tr>\n          <th>\n            <span class=\"bx--table-header-label\">Date</span>\n          </th>\n          <th>\n            <span class=\"bx--table-header-label\">Revenue</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>2021-10-8</td>\n          <td>450,000,000</td>\n        </tr>\n        <tr>\n          <td>2021-10-9</td>\n          <td>550,000,000</td>\n        </tr>\n        <tr>\n          <td>2021-10-8</td>\n          <td>450,000,000</td>\n        </tr>\n        <tr>\n          <td>2021-10-9</td>\n          <td>550,000,000</td>\n        </tr>\n        <tr>\n          <td>2021-10-8</td>\n          <td>450,000,000</td>\n        </tr>\n        <tr>\n          <td>2021-10-9</td>\n          <td>550,000,000</td>\n        </tr>\n        <tr>\n          <td>2021-10-8</td>\n          <td>450,000,000</td>\n        </tr>\n        <tr>\n          <td>2021-10-9</td>\n          <td>550,000,000</td>\n        </tr>\n        <tr>\n          <td>2021-10-8</td>\n          <td>450,000,000</td>\n        </tr>\n        <tr>\n          <td>2021-10-9</td>\n          <td>550,000,000</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport Breadcrumbs from \"../components/Breadcrumbs\";\nimport Progress from \"../components/Progress\";\nimport Input from \"../components/Input\";\nimport Uploader from \"../components/Uploader\";\nimport { Information16 } from \"@carbon/icons-react\";\n\nimport Button from \"../components/Button\";\nimport AnalysisGuidance from \"./AnalysisGuidance\";\nimport Table from \"../components/Table\";\n\nconst Analysis = () => {\n  const [slider, setSlider] = useState(false);\n  const handleSideNav = () => {\n    if (slider === false) {\n      setSlider(true);\n    } else {\n      setSlider(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <Breadcrumbs\n          data={[\n            { title: \"Home\", link: \"/navigation\" },\n            { title: \"Forecasting\", link: \"/forecasting\" },\n            { title: \"Analysis\", link: \"/forecasting/analysis\" },\n          ]}\n        />\n        <div className=\"header\">\n          <h2>Time Series Forecasting</h2>\n        </div>\n        <div className=\"forecasting-content\">\n          <div className=\"forecasting-description\">\n            <Progress state={2} />\n            <div className=\"data-input\">\n              <small>\n                Note: Due to various data requirements, Gallium forecasting uses\n                temporary data caching, however, your data is not saved.Once you\n                are done with any experiment, you have to download the results,\n                or you will loose your data. Please do not use Gallium for\n                sensitive data.\n              </small>\n              <Table />\n            </div>\n\n            <div\n              style={{\n                marginTop: \"4rem\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Button\n                button_title=\"Back\"\n                icon=\"back\"\n                button_link={\"/forecasting/upload\"}\n              />\n              <Button\n                button_title=\"Analyze\"\n                icon=\"next\"\n                button_link={\"/forecasting/result\"}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <AnalysisGuidance slider={slider} handleSideNav={handleSideNav} />\n    </div>\n  );\n};\n\nexport default Analysis;\n","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { CloudDownload16, Close32 } from \"@carbon/icons-react\";\nimport sample_img from \"../assets/images/img/csv_file_example.png\";\n\nconst ResultGuidance = ({ slider, handleSideNav }) => {\n  return (\n    <AnimatePresence>\n      {slider === true && (\n        <motion.div\n          initial={{ x: \"500px\" }}\n          animate={{ x: \"0\", speed: \"1000ms\" }}\n          transition={{ ease: \"easeIn\", duration: 0.4 }}\n          exit={{ x: \"500px\", speed: \"1000ms\" }}\n          className={slider === true ? \"slider\" : \"slider-out\"}\n        >\n          <div className=\"slider-close\">\n            <Close32 onClick={handleSideNav} fill=\"#999999\" />\n          </div>\n          <div className=\"slider-content\">\n            <h4 style={{ color: \"#039874\", marginBottom: \"1rem\" }}>\n              Result Guidance\n            </h4>\n            <p>\n              Your file should contain at least 2 columns (the data field and\n              the prediction field) and look something like this (when viewing\n              in excel):\n            </p>\n            <div className=\"slider-datalist\"></div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default ResultGuidance;\n","import React, { Fragment } from \"react\";\nimport { LineChart } from \"@carbon/charts-react\";\nimport \"@carbon/charts/styles.css\";\nimport \"./style.scss\";\n\nconst Chart = () => {\n  const rowData = [\n    {\n      group: \"Dataset 1\",\n      date: \"2018-12-31T23:00:00.000Z\",\n      value: 10000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-01T04:00:00.000Z\",\n      value: 12000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-01T09:00:00.000Z\",\n      value: 14000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-01T23:00:00.000Z\",\n      value: 25000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-02T01:00:00.000Z\",\n      value: 26000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-02T23:00:00.000Z\",\n      value: 10000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-03T04:00:00.000Z\",\n      value: 10000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-03T09:00:00.000Z\",\n      value: 12000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-04T23:00:00.000Z\",\n      value: 45000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-06T23:00:00.000Z\",\n      value: 49000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-07T14:00:00.000Z\",\n      value: 45000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-08T23:00:00.000Z\",\n      value: 50000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-09T04:00:00.000Z\",\n      value: 52000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-09T14:00:00.000Z\",\n      value: 55000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-09T23:00:00.000Z\",\n      value: 50000,\n    },\n    {\n      group: \"Dataset 1\",\n      date: \"2019-01-12T23:00:00.000Z\",\n      value: 79999,\n    },\n    {\n      group: \"Predicted\",\n      date: \"2019-01-12T23:00:00.000Z\",\n      value: 80000,\n    },\n    {\n      group: \"Predicted\",\n      date: \"2019-01-14T09:00:00.000Z\",\n      value: 85000,\n    },\n    {\n      group: \"Predicted\",\n      date: \"2019-01-15T06:00:00.000Z\",\n      value: 90000,\n    },\n    {\n      group: \"Predicted\",\n      date: \"2019-01-15T17:00:00.000Z\",\n      value: 70000,\n    },\n  ];\n\n  const state = {\n    options: {\n      title: \"Revenue Forecast\",\n      axes: {\n        bottom: {\n          title: \"Date\",\n          mapsTo: \"date\",\n          scaleType: \"time\",\n        },\n        left: {\n          mapsTo: \"value\",\n          title: \"Revenue\",\n          scaleType: \"linear\",\n        },\n      },\n      curve: \"curveMonotoneX\",\n      height: \"400px\",\n    },\n  };\n  return (\n    <div style={{ marginBottom: \"1rem\", width: \"100%\" }}>\n      <LineChart data={rowData} options={state.options}></LineChart>\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport Breadcrumbs from \"../components/Breadcrumbs\";\nimport Progress from \"../components/Progress\";\nimport Input from \"../components/Input\";\nimport Uploader from \"../components/Uploader\";\nimport { Information16 } from \"@carbon/icons-react\";\n\nimport Button from \"../components/Button\";\nimport ResultGuidance from \"./ResultGuidance\";\nimport Table from \"../components/Table\";\nimport Chart from \"../components/Chart\";\n\nconst Result = () => {\n  const [slider, setSlider] = useState(false);\n  const handleSideNav = () => {\n    if (slider === false) {\n      setSlider(true);\n    } else {\n      setSlider(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <Breadcrumbs\n          data={[\n            { title: \"Home\", link: \"/navigation\" },\n            { title: \"Forecasting\", link: \"/forecasting\" },\n            { title: \"Result\", link: \"/forecasting/result\" },\n          ]}\n        />\n        <div className=\"header\">\n          <h2>Time Series Forecasting</h2>\n        </div>\n        <div className=\"forecasting-content\">\n          <div className=\"forecasting-description\">\n            <Progress state={3} />\n\n            <div className=\"data-input\">\n              <small>\n                Note: Due to various data requirements, Gallium forecasting uses\n                temporary data caching, however, your data is not saved.Once you\n                are done with any experiment, you have to download the results,\n                or you will loose your data. Please do not use Gallium for\n                sensitive data.\n              </small>\n              <Chart />\n            </div>\n\n            <div\n              style={{\n                marginTop: \"4rem\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Button\n                button_title=\"Back\"\n                icon=\"back\"\n                button_link={\"/forecasting/upload\"}\n              />\n              <Button button_title=\"Next\" icon=\"next\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <ResultGuidance slider={slider} handleSideNav={handleSideNav} />\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport Upload from \"./Upload\";\nimport Documentation from \"./Documentation\";\nimport Analysis from \"./Analysis\";\nimport Result from \"./Result\";\n\nconst Forecasting = () => {\n  const { path } = useRouteMatch();\n\n  const [slider, setSlider] = useState(false);\n\n  const handleSideNav = () => {\n    if (slider === false) {\n      setSlider(true);\n    } else {\n      setSlider(false);\n    }\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/forecasting\">\n          <Documentation handleSideNav={handleSideNav} slider={slider} />\n        </Route>\n        <Route exact path=\"/forecasting/upload\">\n          <Upload />\n        </Route>\n        <Route exact path=\"/forecasting/analysis\">\n          <Analysis />\n        </Route>\n        <Route exact path=\"/forecasting/result\">\n          <Result />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Forecasting;\n","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { CloudDownload16, Close32 } from \"@carbon/icons-react\";\nimport sample_img from \"../assets/images/img/csv_file_example.png\";\n\nconst ReadMore = ({ slider, handleSideNav }) => {\n  return (\n    <AnimatePresence>\n      {slider === true && (\n        <motion.div\n          initial={{ x: \"500px\" }}\n          animate={{ x: \"0\", speed: \"1000ms\" }}\n          transition={{ ease: \"easeIn\", duration: 0.4 }}\n          exit={{ x: \"500px\", speed: \"1000ms\" }}\n          className={slider === true ? \"slider\" : \"slider-out\"}\n        >\n          <div className=\"slider-close\">\n            <Close32 onClick={handleSideNav} fill=\"#999999\" />\n          </div>\n          <div className=\"slider-content\">\n            <h4 style={{ color: \"#039874\", marginBottom: \"1rem\" }}>\n              About GPT-J GB\n            </h4>\n            <p>\n              GPT-J is the best-performing publicly available Transformer LM in\n              terms of zero-shot performance on various down-streaming tasks.\n              GPT-J allows more flexible and faster inference than Tensorflow +\n              TPU counterparts. This project required a substantially smaller\n              amount of person-hours than other large-scale model developments\n              did, which demonstrates that JAX + xmap + TPUs is the right set of\n              tools for quick development of large-scale models.\n            </p>\n\n            <h4\n              style={{\n                color: \"#039874\",\n                marginTop: \"2rem\",\n                marginBottom: \"1rem\",\n              }}\n            >\n              Model Design\n            </h4>\n            <p>\n              Model design: Our model design and hyperparameter choice closely\n              follow those of 6.7B GPT-3 with some differences. Notably, The\n              model was trained on 400B tokens from The Pile dataset with 800GB\n              text. Efficient attention (linear, local/sliding window, etc) was\n              not used for simplicity, as it would not have significantly\n              improved throughput at this scale. The dimension of each attention\n              head is set to 256, which is twice larger than that of GPT-3 of\n              comparable size. This noticeably improved the throughput with\n              minimal performance degradation.\n            </p>\n            <div className=\"slider-datalist\"></div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default ReadMore;\n","import Axios from \"axios\";\n\nexport const axios = Axios.create({\n  baseURL: \"http://192.168.0.149:8558\",\n});\n","import React, { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport \"./style.scss\";\nimport Breadcrumbs from \"../components/Breadcrumbs\";\nimport { ArrowRight16, ArrowRight24 } from \"@carbon/icons-react\";\nimport ReadMore from \"./ReadMore\";\nimport { axios } from \"./middleware\";\nimport { InlineLoading } from \"carbon-components-react\";\n\nconst ChatLaunch = (props) => {\n  const [name, setName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [token, setToken] = useState({});\n  const [error, setError] = useState({});\n  const { path } = useRouteMatch();\n\n  console.log(path);\n  const history = useHistory();\n\n  const handleInput = (event) => {\n    setName(event.target.value);\n  };\n\n  const CREATE_SESSION = async () => {\n    setLoading(true);\n    try {\n      const token = await axios.post(`/token?name=${name}`);\n      setToken(token);\n      setLoading(false);\n      setError({});\n      history.push({\n        pathname: `${path}/chat/${token.data.token}`,\n        state: { token: token.data },\n      });\n    } catch (error) {\n      setError(error.response);\n      setLoading(false);\n    }\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    CREATE_SESSION();\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <Breadcrumbs\n          data={[\n            { title: \"Home\", link: \"/navigation\" },\n            { title: \"GPT-J Chat Bot\", link: \"/gptj-chatbot\" },\n          ]}\n        />\n        <div className=\"header\">\n          <h2>Conversational AI Chat Bot with GPT-J 6B</h2>\n        </div>\n        <div className=\"chat-content\">\n          <div className=\"chat-description\">\n            <h4>What is GPT-J-6B ?</h4>\n            <p>\n              GPT-J-6B Chat Bot is an interface to interact with the GPT-J\n              language model GPT-J-6B is a 6 billion parameter Transformer\n              model, trained on a dataset from Eleuther AI, called \"The Pile,\"\n              which is a 825GiB dataset from a mixture of sources. GPT-J-6B\n              performs nearly on par with 6.7B GPT-3 on some tasks.\n            </p>\n            <div className=\"chat-link\" onClick={props.handleSideNav}>\n              <a style={{ color: \"#039874\" }}>Read More about GPT-J-6B</a>\n              <ArrowRight16 fill=\"#039874\" />\n            </div>\n\n            <form\n              className={`start-chat ${\n                Object.keys(error).length > 0 ? \"start-chat-error\" : \"\"\n              }`}\n              onSubmit={onSubmit}\n            >\n              <input\n                placeholder=\"Enter your name to sart the chat\"\n                value={name}\n                type=\"text\"\n                onChange={handleInput}\n              />\n              <button>\n                <div\n                  style={{\n                    width: \"180px\",\n                    height: \"30px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <h4>Launch Chat Session </h4>{\" \"}\n                </div>\n                <div\n                  style={{\n                    height: \"30px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  {loading ? <InlineLoading /> : <ArrowRight24 />}\n                </div>\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n      <ReadMore slider={props.slider} handleSideNav={props.handleSideNav} />\n    </div>\n  );\n};\n\nexport default ChatLaunch;\n","import { Renew16, SendFilled24 } from \"@carbon/icons-react\";\nimport React, { useState, Fragment } from \"react\";\nimport { useLocation, useHistory, Link } from \"react-router-dom\";\nimport Breadcrumbs from \"../components/Breadcrumbs\";\nimport { axios } from \"./middleware\";\n\nconst Chat = (props) => {\n  const [data, setData] = useState([]);\n  const [human, setHuman] = useState([]);\n  const [bot, setBot] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({});\n\n  const location = useLocation();\n  console.log(location);\n\n  const handleInput = (event) => {\n    setData(event.target.value);\n  };\n\n  const CHAT = async () => {\n    setLoading(true);\n\n    // Create WebSocket connection.\n    const socket = new WebSocket(\n      `ws://192.168.0.149:8558/chat/${location.state.token.token}?token=${location.state.token.token}`\n    );\n    // Connection opened\n    socket.addEventListener(\"open\", function (event) {\n      setHuman(human.concat(data));\n      socket.send(data);\n    });\n    // Listen for messages\n    socket.addEventListener(\"message\", function (event) {\n      setBot(bot.concat(event.data));\n    });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    CHAT();\n    setData([]);\n  };\n\n  const HANDLE_REFRESH = async () => {\n    try {\n      const token = await axios.post(\n        `/refresh_token?token=${location.state.token.token}`\n      );\n      setHuman([]);\n      setBot([]);\n    } catch (error) {\n      setError(error.response);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <Breadcrumbs\n          data={[\n            { title: \"Home\", link: \"/navigation\" },\n            { title: \"Chat\", link: \"/gpt-chatbot/chat\" },\n          ]}\n        />\n        <div className=\"header\">\n          <h2>Welcome, {location.state.token.name}</h2>\n        </div>\n        <div className=\"chat-content\">\n          <small>Session Token: {location.state.token.token}</small>\n          <small>Chat Session will end in 60 minutes</small>\n        </div>\n\n        <div style={{ maxWidth: \"600px\" }}>\n          <small>\n            Note: This model stores human and bot inputs in short term memory,\n            in communicating with the model. Should the response become\n            irregular, please refresh the session.\n          </small>\n          <div className=\"refresh-link\" onClick={HANDLE_REFRESH}>\n            <p>Refresh Chat Session</p>\n            <Renew16 fill=\"#039874\" />\n          </div>\n        </div>\n\n        <form className=\"chat-container\" onSubmit={onSubmit}>\n          <div className=\"chat-container-input\">\n            <input\n              placeholder=\"Enter your message\"\n              value={data}\n              type=\"text\"\n              onChange={handleInput}\n            />\n\n            <button>\n              <SendFilled24 color=\"#039874\" />\n            </button>\n          </div>\n          <div className=\"chat-container-message\">\n            {human.length > 0 ? (\n              human.map((item, index) => (\n                <Fragment>\n                  <div key={index} className=\"chat-container-message-human\">\n                    <p>{item}</p>\n                  </div>\n                  <div key={index} className=\"chat-container-message-bot\">\n                    <p>{bot[index]}</p>\n                  </div>\n                </Fragment>\n              ))\n            ) : (\n              <div\n                style={{\n                  display: \"flex\",\n                  height: \"200px\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <h4 style={{ color: \"#e0e0e0\" }}>No Chat History</h4>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport Chatlaunch from \"./ChatLaunch\";\nimport Chat from \"./Chat\";\n\nconst GptjChatbot = (props) => {\n  const { path } = useRouteMatch();\n  const [slider, setSlider] = useState(false);\n\n  const handleSideNav = () => {\n    if (slider === false) {\n      setSlider(true);\n    } else {\n      setSlider(false);\n    }\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route path={`${path}/chat/:token`}>\n          <Chat handleSideNav={handleSideNav} slider={slider} />\n        </Route>\n        <Route path={`${path}`}>\n          <Chatlaunch handleSideNav={handleSideNav} slider={slider} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default GptjChatbot;\n","export default __webpack_public_path__ + \"static/media/openai.fc0d0e76.svg\";","export default __webpack_public_path__ + \"static/media/ludwig.50d41437.svg\";","export default __webpack_public_path__ + \"static/media/prophet.0230337e.svg\";","export default __webpack_public_path__ + \"static/media/screen-image.9d4606c4.svg\";","export default __webpack_public_path__ + \"static/media/eleutherai.fd1d54e4.svg\";","import React from \"react\";\nimport \"./style.scss\";\nimport {\n  ChartLineSmooth32,\n  Cognitive32,\n  PhraseSentiment32,\n} from \"@carbon/icons-react\";\nimport { Link } from \"react-router-dom\";\nimport openai from \"../../assets/images/svg/openai.svg\";\nimport ludwig from \"../../assets/images/svg/ludwig.svg\";\nimport prophet from \"../../assets/images/svg/prophet.svg\";\nimport eleutherai from \"../../assets/images/svg/eleutherai.svg\";\nimport Button from \"../../components/Button\";\nimport screen_image from \"../../assets/images/svg/screen-image.svg\";\n\nconst Landing = () => {\n  return (\n    <div className=\"landing-container\">\n      <div className=\"landing-content\">\n        <div className=\"landing-description\">\n          <div className=\"landing-description-content\">\n            <h1>No Code Platform for </h1>\n            <h1 style={{ color: \"#039874\" }}>Open Source AI Models</h1>\n            <p>\n              From predictive analytics to natural language understanding,\n              Non-technical users across several functions can now leverage\n              powerful open source AI models without learning to code.\n            </p>\n            <div className=\"landing-navs\">\n              <Button button_title=\"Launch Gallium\" button_link=\"/navigation\" />\n              <a>Documentation</a>\n            </div>\n            <div className=\"logo-container\">\n              <img src={openai} width=\"80px\" />\n              <img src={ludwig} width=\"80px\" />\n              <img src={prophet} width=\"80px\" />\n              <h4\n                style={{\n                  fontFamily: \"display-text-bold\",\n                  fontSize: \"1rem\",\n                }}\n              >\n                GPT-3\n              </h4>\n            </div>\n          </div>\n          <div className=\"landing-image\">\n            <img src={screen_image} />\n          </div>\n        </div>\n        <div className=\"landing-categories\">\n          <div className=\"landing-category\">\n            <div className=\"category-header\">\n              <ChartLineSmooth32 fill=\"#039874\" />\n              <h4>Forecasting Analytics</h4>\n            </div>\n\n            <p>\n              From predicting user growth to revenue forecasts, Non-technical\n              users across several functions can now leverage the powerful\n              facebook prophet analytics\n            </p>\n          </div>\n          <div className=\"landing-category\">\n            <div className=\"category-header\">\n              <Cognitive32 fill=\"#039874\" />\n              <h4>Natural Language Processing</h4>\n            </div>\n\n            <p>\n              From predicting user growth to revenue forecasts, Non-technical\n              users across several functions can now leverage the powerful\n              facebook prophet analytics\n            </p>\n          </div>\n          <div className=\"landing-category\">\n            <div className=\"category-header\">\n              <PhraseSentiment32 fill=\"#039874\" />\n              <h4>Sentiment Analytics</h4>\n            </div>\n\n            <p>\n              From predicting user growth to revenue forecasts, Non-technical\n              users across several functions can now leverage the powerful\n              facebook prophet analytics\n            </p>\n          </div>\n        </div>\n      </div>\n      <Link\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginBottom: \"5rem\",\n          marginTop: \"5rem\",\n        }}\n      >\n        <p style={{ fontSize: \"0.8rem\", color: \"#039874\" }}>\n          Developed by Stephen Sanwo\n        </p>{\" \"}\n      </Link>\n    </div>\n  );\n};\n\nexport default Landing;\n","export default __webpack_public_path__ + \"static/media/forecasting.0d65b4a9.svg\";","export default __webpack_public_path__ + \"static/media/nlp.ce08451d.svg\";","export default __webpack_public_path__ + \"static/media/summarize.5f442d65.svg\";","import React from \"react\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from \"../../components/Breadcrumbs\";\nimport forecasting from \"../../assets/images/svg/forecasting.svg\";\nimport nlp from \"../../assets/images/svg/nlp.svg\";\nimport summarize from \"../../assets/images/svg/summarize.svg\";\n\nconst Nav = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <Breadcrumbs data={[{ title: \"Home\", link: \"/navigation\" }]} />\n        <div className=\"header\">\n          <h2>Welcome, what do you want to do?</h2>\n        </div>\n        <div className=\"nav-categories\">\n          <Link to=\"/forecasting\">\n            <div className=\"nav-category\">\n              <div>\n                <h4>Forecasting</h4>\n                <p>\n                  Run forecasts on any data with advanced AI models like\n                  Facebook Prophet and Uber's Ludwig{\" \"}\n                </p>\n              </div>\n\n              <img src={forecasting} alt=\"\" />\n            </div>\n          </Link>\n          <Link to=\"/gptj-chatbot\">\n            <div className=\"nav-category\">\n              <div>\n                <h4>GPT-J Chat Bot</h4>\n                <p>\n                  Take the GPT-J 6b AI Model for a spin by engaging it in a\n                  conversation\n                </p>\n              </div>\n\n              <img src={nlp} alt=\"\" />\n            </div>\n          </Link>\n          <Link>\n            <div className=\"nav-category\">\n              <div>\n                <h4>Essay Summarisation</h4>\n                <p>\n                  Too lazy to read?, Get a summarized version of a long article\n                  or book.\n                </p>\n              </div>\n\n              <img src={summarize} alt=\"\" />\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Navbar from \"./components/Navbar\";\nimport Forecasting from \"./forecasting\";\nimport GptjChatbot from \"./GptjChatbot\";\nimport Landing from \"./pages/Landing\";\nimport Nav from \"./pages/Nav\";\n\nfunction App() {\n  const [isNavOpen, setIsNavOpen] = useState(\"closed\");\n  return (\n    <Router>\n      <Navbar isNavOpen={isNavOpen} setIsNavOpen={setIsNavOpen} />\n      <Switch>\n        <Route exact path=\"/\">\n          <Landing />\n        </Route>\n        <Route exact path=\"/navigation\">\n          <Nav />\n        </Route>\n        <Route path=\"/forecasting\">\n          <Forecasting />\n        </Route>\n        <Route path=\"/gptj-chatbot\">\n          <GptjChatbot />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}